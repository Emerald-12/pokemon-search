{"version":3,"sources":["components/output.module.css","resources/typeList.js","components/Output.js","components/Content.js","App.js","index.js","components/content.module.css"],"names":["module","exports","typeList","type","colour","Output","props","pokeInfo","className","styles","pokeCard","style","cardColour","length","backgroundColor","background","pokeCardTitle","name","dexEntry","pokeEntry","pokeSprites","undefined","gridArea","src","sprites","front_default","alt","back_default","front_shiny","back_shiny","pokeStats","stats","base_stat","Content","useState","query","setQuery","setPokeInfo","pokeTypes","setPokeTypes","setPokeEntry","failedToLoad","setFailedToLoad","isLoading","toggleIsLoading","stateColours","setStateColours","searchPoke","e","a","url","urlDex","fetch","res","resDex","ok","json","data","dataDex","types","map","i","flavor_text_entries","language","flavor_text","getDex","console","log","handleFocus","target","select","useEffect","colourCodes","push","findPokeColors","label","htmlFor","input","placeholder","ref","focus","onFocus","onKeyPress","key","keyCode","handleEnter","onChange","value","toLowerCase","button","onClick","responseMessage","color","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.145e0854.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokeCard\":\"output_pokeCard__1iiX2\",\"dexEntry\":\"output_dexEntry__13rPW\",\"pokeCardTitle\":\"output_pokeCardTitle__7V9Kp\",\"pokeSprites\":\"output_pokeSprites__1hz7x\",\"pokeStats\":\"output_pokeStats__8fCwy\"};","const typeList =[ {\r\n    type: 'normal',\r\n    colour: '#A8A77AFF'},\r\n    {type: 'fire',\r\n    colour: '#EE8130FF'},\r\n    {type: 'water',\r\n    colour: '#6390F0FF'},\r\n    {type: 'electric',\r\n    colour: '#F7D02CFF'},\r\n    {type: 'grass',\r\n    colour: '#7AC74CFF'},\r\n    {type: 'ice',\r\n    colour: '#96D9D6FF'},\r\n    {type: 'fighting',\r\n    colour: '#C22E28FF'},\r\n    {type: 'poison',\r\n    colour: '#A33EA1FF'},\r\n    {type: 'ground',\r\n    colour: '#E2BF65FF'},\r\n    {type: 'flying',\r\n    colour: '#A98FF3FF'},\r\n    {type: 'psychic',\r\n    colour: '#F95587FF'},\r\n    {type: 'bug',\r\n    colour: '#A6B91AFF'},\r\n    {type: 'rock',\r\n    colour: '#B6A136FF'},\r\n    {type: 'ghost',\r\n    colour: '#735797FF'},\r\n    {type: 'dragon',\r\n    colour: '#6F35FCFF'},\r\n    {type: 'dark',\r\n    colour: '#705746FF'},\r\n    {type: 'steel',\r\n    colour: '#B7B7CEFF'},\r\n    {type: 'fairy',\r\n    colour: '#D685ADFF'}\r\n]\r\n\r\nexport default typeList","import styles from './output.module.css'\r\n\r\nfunction Output(props) {\r\n    return (\r\n        props.pokeInfo ? (\r\n            <div className={styles.pokeCard}\r\n                style={props.cardColour.length === 1 ?\r\n                    { backgroundColor: ` ${props.cardColour[0]}` } : props.cardColour.length === 2\r\n                        ?{ background: `linear-gradient(135deg, ${props.cardColour[0]} 20%, ${props.cardColour[1]} 80%)`}\r\n                        :{ backgroundColor: 'silver' }}>\r\n\r\n                    <h2 className={styles.pokeCardTitle}>{props.pokeInfo.name}</h2>\r\n                    <h2 className={styles.dexEntry}>{props.pokeEntry}</h2>\r\n\r\n                <div className={styles.pokeSprites}>\r\n                {props.pokeInfo.name  !== '' && props.pokeInfo.name !== undefined &&\r\n                <>\r\n                    \r\n                        <img style={{gridArea:'sprite1'}} src={props.pokeInfo.sprites.front_default} alt='' />\r\n                        <img style={{gridArea:'sprite2'}} src={props.pokeInfo.sprites.back_default} alt='' />\r\n                    \r\n                    \r\n                    \r\n                        <img style={{gridArea:'sprite3'}} src={props.pokeInfo.sprites.front_shiny} alt='' />\r\n                        <img style={{gridArea:'sprite4'}} src={props.pokeInfo.sprites.back_shiny} alt='' />\r\n                    \r\n                </>}\r\n                </div>\r\n        \r\n                <div className={styles.pokeStats}>\r\n                {props.pokeInfo.name  !== '' && props.pokeInfo.name !== undefined && \r\n                <div >\r\n                    <div >\r\n                        <p>HP: {props.pokeInfo.stats[0].base_stat}</p>\r\n                        <p>Attack: {props.pokeInfo.stats[1].base_stat}</p>\r\n                        <p>Defense: {props.pokeInfo.stats[2].base_stat}</p>\r\n                    </div>\r\n\r\n                    <div >\r\n                        <p>S. Attack: {props.pokeInfo.stats[3].base_stat}</p>\r\n                        <p>S. Defence: {props.pokeInfo.stats[4].base_stat}</p>\r\n                        <p>Speed: {props.pokeInfo.stats[5].base_stat}</p>\r\n                    </div>\r\n                </div>}\r\n                </div>\r\n            </div>) : (<div style={{ backgroundColor: 'silver' }}></div>)\r\n    )\r\n}\r\n\r\nexport default Output\r\n","import { useState, useEffect } from 'react'\r\n\r\nimport typeList from './../resources/typeList'\r\nimport Output from './Output'\r\nimport styles from './content.module.css'\r\n\r\n\r\n\r\nfunction Content() {\r\n\r\n\t//come here for all your state needs\r\n\tconst [query, setQuery] = useState('')\r\n\tconst [pokeInfo, setPokeInfo] = useState({ name: '' })\r\n\tconst [pokeTypes, setPokeTypes] = useState([])\r\n\tconst [pokeEntry, setPokeEntry] = useState()\r\n\tconst [failedToLoad, setFailedToLoad] = useState(false)\r\n\r\n\t//this still needs reworking\r\n\tconst [isLoading, toggleIsLoading] = useState()\r\n\r\n\tconst [stateColours, setStateColours] = useState(['white', 'white'])\r\n\r\n\t//checks the full colour list to see if our type array(state) includes\r\n\t//the type of any entry in the full colour list\r\n\t//then pushed the colour codes for our types in to the colourCodes array\r\n\r\n\r\n\t//same as above, but checks each entry for either type one or type 2\r\n\t//very workaround way of doing things, blame Gustav\r\n\tfunction findPokeColors() {\r\n\t\tlet colourCodes = []\r\n\t\tif (pokeTypes.length === 1) {\r\n\t\t\tfor (let i = 0; i < typeList.length; i++) {\r\n\t\t\t\tif (pokeTypes[0] === typeList[i].type) {\r\n\t\t\t\t\tcolourCodes.push(typeList[i].colour)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telse if (pokeTypes.length === 2) {\r\n\t\t\tfor (let i = 0; i < typeList.length; i++) {\r\n\t\t\t\tif (pokeTypes[0] === typeList[i].type) {\r\n\t\t\t\t\tcolourCodes.push(typeList[i].colour)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < typeList.length; i++) {\r\n\t\t\tif (pokeTypes[1] === typeList[i].type) {\r\n\t\t\t\tcolourCodes.push(typeList[i].colour)\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetStateColours(colourCodes)\r\n\t}\r\n\r\n\tconst searchPoke = async (e) => {\r\n\t\t//defines the url dynamically using teplate literals\r\n\t\tsetFailedToLoad(false)\r\n\t\ttoggleIsLoading(true)\r\n\t\tsetPokeInfo()\r\n\t\tsetPokeTypes([])\r\n\t\tsetPokeEntry()\r\n\t\tlet url = `https://pokeapi.co/api/v2/pokemon/${query}`\r\n\t\tlet urlDex = `https://pokeapi.co/api/v2/pokemon-species/${query}`\r\n\t\ttry {\r\n\r\n\t\t\t//attepts to get the url and save it in a const\r\n\t\t\t//await means that we allow the process to take time (think ping)\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tconst resDex = await fetch(urlDex)\r\n\t\t\t//console.logs the state of us reaching the site (true/false)\r\n\t\t\t!res.ok ? setFailedToLoad(true) : setFailedToLoad(false);\r\n\r\n\t\t\tconst data = await res.json();\r\n\t\t\tconst dataDex = await resDex.json()\r\n\t\t\tres.ok ? toggleIsLoading(false) : toggleIsLoading(true);\r\n\t\t\t\r\n\t\t\tsetPokeInfo(data);\r\n\t\t\t\r\n\t\t\t\t//sets the array state to hold the types from the pokemon\r\n\t\t\t\t//can't use the pokeInfo state but rather data since it has to occur\r\n\t\t\t\t//after new data fetch\r\n\t\t\t\tsetPokeTypes(data.types.map((i) => i.type.name))\r\n\t\t\t\t//immediately invoked function, previously getDex function\r\n\t\t\tconst getDex = () => {\r\n\t\t\t\t\r\n\t\t\t\tfor (let i = 10; i < dataDex.flavor_text_entries.length; i++) {\r\n\t\t\t\t\tif (dataDex.flavor_text_entries[i].language.name === 'en') {\r\n\t\t\t\t\t\tsetPokeEntry(dataDex.flavor_text_entries[i].flavor_text)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tsetPokeEntry(dataDex.flavor_text_entries[i].flavor_text)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgetDex();\r\n\r\n\r\n\t\t\t//making a load error code here, eventually\r\n\t\t\t//  res.ok ? null : <p>Failed to load new pokemon</p>\r\n\t\t} catch (e) { console.log(e) }\r\n\t}\r\n\r\n\t//when input field is focused, highlight the input field text\r\n\tconst handleFocus = (e) => {\r\n\t\te.target.select()\r\n\t}\r\n\r\n\t//makes the input field do the stuff the button does when you press enter\r\n\tconst handleEnter = (e) => {\r\n\t\tif (e.key === 'Enter' || e.keyCode === 13) {\r\n\t\t\tsearchPoke()\r\n\t\t\thandleFocus(e)\r\n\t\t}\r\n\t}\r\n\t\r\n\t//executes the colour checks whenever pokeTypes state changes\r\n\t//possibly inefficient since it also checks on initial declaration\r\n\tuseEffect(() => {\r\n\t\tfindPokeColors()\r\n\t\t// eslint-disable-next-line\r\n\t}, [pokeTypes])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div>\r\n\t\t\t\t<label className={styles.label} htmlFor=\"query\">Pokemon</label>\r\n\r\n\t\t\t\t<input className={styles.input} type=\"text\" name=\"query\" placeholder=\"Enter Name or ID\"\r\n\t\t\t\t\tref={input => input && input.focus()}\r\n\t\t\t\t\tonFocus={handleFocus}\r\n\t\t\t\t\tonKeyPress={(e) => handleEnter(e)}\r\n\t\t\t\t\tonChange={(e) => (e.target.value.toLowerCase()==='meowstic') ? setQuery(678) : (e.target.value.toLowerCase() === 10025) ? setQuery(678):setQuery(e.target.value.toLowerCase()) }\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<button className={styles.button}\r\n\t\t\t\t\tonClick={() => searchPoke()}\r\n\t\t\t\t>Search\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t{(isLoading && !failedToLoad) ?\r\n\t\t\t\t\t(<h1 className={styles.responseMessage}>Loading Pokemon</h1>) : (\r\n\t\t\t\t\t\tfailedToLoad ?\r\n\t\t\t\t\t\t\t(<h1 className={styles.responseMessage}>Failed to load Pokemon</h1>) :\r\n\t\t\t\t\t\t\t(<div>\r\n\t\t\t\t\t\t\t\t<h1 style={{ color: 'Black' }} className={styles.responseMessage}>Your Pokemon is:</h1>\r\n\t\t\t\t\t\t\t\t<Output\r\n\t\t\t\t\t\t\t\t\tcardColour={stateColours}\r\n\t\t\t\t\t\t\t\t\tpokeInfo={pokeInfo}\r\n\t\t\t\t\t\t\t\t\tpokeEntry={pokeEntry}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\nexport default Content","import Content from './components/Content'\r\n// eslint-disable-next-line\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect} from 'react-router-dom';\r\nimport './styles.css'\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n            \r\n            <div>\r\n                        \r\n                <Router>\r\n                    <div className='container'>\r\n                        <Switch>\r\n                            <Route path='/' component={Content}/>\r\n                        </Switch>\r\n                        </div>\r\n                </Router>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"content_label__1SG18\",\"input\":\"content_input__B2x_E\",\"button\":\"content_button__2CZbU\",\"responseMessage\":\"content_responseMessage__1MhNY\"};"],"sourceRoot":""}