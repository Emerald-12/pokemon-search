{"version":3,"sources":["components/content.module.css","components/title.module.css","components/Title.js","resources/typeList.js","components/Output.js","components/Content.js","App.js","index.js","components/output.module.css"],"names":["module","exports","Title","className","styles","title","typeList","type","colour","Output","props","pokeInfo","pokeCard","style","cardColour","length","backgroundColor","background","pokeText","pokeCardTitle","name","dexEntry","pokeEntry","pokeSprites","undefined","src","sprites","front_default","alt","back_default","front_shiny","back_shiny","pokeStats","display","flexDirection","width","stats","base_stat","margin","Content","useState","query","setQuery","setPokeInfo","pokeTypes","setPokeTypes","setPokeEntry","failedToLoad","setFailedToLoad","isLoading","toggleIsLoading","stateColours","setStateColours","searchPoke","e","a","url","urlDex","fetch","res","resDex","console","log","ok","json","data","dataDex","types","map","i","flavor_text_entries","language","flavor_text","getDex","handleFocus","target","select","useEffect","colourCodes","push","findPokeColors","label","htmlFor","input","placeholder","ref","focus","onFocus","onKeyPress","key","keyCode","handleEnter","onChange","value","toLowerCase","button","onClick","responseMessage","color","classname","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44f29807.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"content_label__1CM7o\",\"input\":\"content_input__3Zslu\",\"button\":\"content_button__sDN7x\",\"responseMessage\":\"content_responseMessage__hSFEL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"title_title__1rF9c\"};","import styles from './title.module.css'\r\n\r\nfunction Title() {\r\n    return (\r\n        <>\r\n            <h1 className={styles.title}>Hello pokemon World</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Title","const typeList =[ {\r\n    type: 'normal',\r\n    colour: '#A8A77AFF'},\r\n    {type: 'fire',\r\n    colour: '#EE8130FF'},\r\n    {type: 'water',\r\n    colour: '#6390F0FF'},\r\n    {type: 'electric',\r\n    colour: '#F7D02CFF'},\r\n    {type: 'grass',\r\n    colour: '#7AC74CFF'},\r\n    {type: 'ice',\r\n    colour: '#96D9D6FF'},\r\n    {type: 'fighting',\r\n    colour: '#C22E28FF'},\r\n    {type: 'poison',\r\n    colour: '#A33EA1FF'},\r\n    {type: 'ground',\r\n    colour: '#E2BF65FF'},\r\n    {type: 'flying',\r\n    colour: '#A98FF3FF'},\r\n    {type: 'psychic',\r\n    colour: '#F95587FF'},\r\n    {type: 'bug',\r\n    colour: '#A6B91AFF'},\r\n    {type: 'rock',\r\n    colour: '#B6A136FF'},\r\n    {type: 'ghost',\r\n    colour: '#735797FF'},\r\n    {type: 'dragon',\r\n    colour: '#6F35FCFF'},\r\n    {type: 'dark',\r\n    colour: '#705746FF'},\r\n    {type: 'steel',\r\n    colour: '#B7B7CEFF'},\r\n    {type: 'fairy',\r\n    colour: '#D685ADFF'}\r\n]\r\n\r\nexport default typeList","import styles from './output.module.css'\r\n\r\nfunction Output(props) {\r\n    return (\r\n        props.pokeInfo ? (\r\n            <div className={styles.pokeCard}\r\n                style={props.cardColour.length === 1 ?\r\n                    { backgroundColor: ` ${props.cardColour[0]}` } : props.cardColour.length === 2\r\n                        ?{ background: `linear-gradient(135deg, ${props.cardColour[0]} 20%, ${props.cardColour[1]} 80%)`}\r\n                        :{ backgroundColor: 'silver' }}>\r\n\r\n                <div className={styles.pokeText}>\r\n                    <h1 className={styles.pokeCardTitle}>{props.pokeInfo.name}</h1>\r\n                    <h2 className={styles.dexEntry}>{props.pokeEntry}</h2>\r\n                </div>\r\n\r\n                <div className={styles.pokeSprites}>\r\n                {props.pokeInfo.name  !== '' && props.pokeInfo.name !== undefined &&\r\n                <>\r\n                    <div>\r\n                        <img src={props.pokeInfo.sprites.front_default} alt='' />\r\n                        <img src={props.pokeInfo.sprites.back_default} alt='' />\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <img src={props.pokeInfo.sprites.front_shiny} alt='' />\r\n                        <img src={props.pokeInfo.sprites.back_shiny} alt='' />\r\n                    </div>\r\n                </>}\r\n                </div>\r\n        \r\n                <div className={styles.pokeStats}>\r\n                {props.pokeInfo.name  !== '' && props.pokeInfo.name !== undefined && \r\n                <div style={{display:'flex',\r\n                flexDirection:'row'}}>\r\n                    <div style={{display:'flex',\r\n                    flexDirection:'column', width:'50%'}}>\r\n                        <p>HP: {props.pokeInfo.stats[0].base_stat}</p>\r\n                        <p>Attack: {props.pokeInfo.stats[1].base_stat}</p>\r\n                        <p>Defense: {props.pokeInfo.stats[2].base_stat}</p>\r\n                    </div>\r\n\r\n                    <div style={{display:'flex',\r\n                    flexDirection:'column',\r\n                    width: '50%',\r\n                    margin:'auto'}}>\r\n                        <p>S. Attack: {props.pokeInfo.stats[3].base_stat}</p>\r\n                        <p>S. Defence: {props.pokeInfo.stats[4].base_stat}</p>\r\n                        <p>Speed: {props.pokeInfo.stats[5].base_stat}</p>\r\n                    </div>\r\n                </div>}\r\n                </div>\r\n            </div>) : (<div style={{ backgroundColor: 'silver' }}></div>)\r\n    )\r\n}\r\n\r\nexport default Output","import { useState, useEffect } from 'react'\r\n\r\nimport typeList from './../resources/typeList'\r\nimport Output from './Output'\r\nimport styles from './content.module.css'\r\n\r\n\r\n\r\nfunction Content() {\r\n\r\n\t//come here for all your state needs\r\n\tconst [query, setQuery] = useState('')\r\n\tconst [pokeInfo, setPokeInfo] = useState({ name: '' })\r\n\tconst [pokeTypes, setPokeTypes] = useState([])\r\n\tconst [pokeEntry, setPokeEntry] = useState()\r\n\tconst [failedToLoad, setFailedToLoad] = useState(false)\r\n\r\n\t//this still needs reworking\r\n\tconst [isLoading, toggleIsLoading] = useState()\r\n\r\n\tconst [stateColours, setStateColours] = useState(['white', 'white'])\r\n\r\n\t//checks the full colour list to see if our type array(state) includes\r\n\t//the type of any entry in the full colour list\r\n\t//then pushed the colour codes for our types in to the colourCodes array\r\n\r\n\r\n\t//same as above, but checks each entry for either type one or type 2\r\n\t//very workaround way of doing things, blame Gustav\r\n\tfunction findPokeColors() {\r\n\t\tlet colourCodes = []\r\n\t\tif (pokeTypes.length === 1) {\r\n\t\t\tfor (let i = 0; i < typeList.length; i++) {\r\n\t\t\t\tif (pokeTypes[0] === typeList[i].type) {\r\n\t\t\t\t\tcolourCodes.push(typeList[i].colour)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telse if (pokeTypes.length === 2) {\r\n\t\t\tfor (let i = 0; i < typeList.length; i++) {\r\n\t\t\t\tif (pokeTypes[0] === typeList[i].type) {\r\n\t\t\t\t\tcolourCodes.push(typeList[i].colour)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < typeList.length; i++) {\r\n\t\t\tif (pokeTypes[1] === typeList[i].type) {\r\n\t\t\t\tcolourCodes.push(typeList[i].colour)\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(colourCodes)\r\n\t\tsetStateColours(colourCodes)\r\n\t}\r\n\r\n\tconst searchPoke = async (e) => {\r\n\t\t//defines the url dynamically using teplate literals\r\n\t\tsetFailedToLoad(false)\r\n\t\ttoggleIsLoading(true)\r\n\t\tsetPokeInfo()\r\n\t\tsetPokeTypes([])\r\n\t\tsetPokeEntry()\r\n\t\tlet url = `https://pokeapi.co/api/v2/pokemon/${query}`\r\n\t\tlet urlDex = `https://pokeapi.co/api/v2/pokemon-species/${query}`\r\n\t\ttry {\r\n\r\n\t\t\t//attepts to get the url and save it in a const\r\n\t\t\t//await means that we allow the process to take time (think ping)\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tconst resDex = await fetch(urlDex)\r\n\t\t\t//console.logs the state of us reaching the site (true/false)\r\n\t\t\tconsole.log(`statResOK: ${res.ok}`)\r\n\t\t\tconsole.log(`statResOK: ${resDex.ok}`)\r\n\t\t\t!res.ok ? setFailedToLoad(true) : setFailedToLoad(false);\r\n\r\n\t\t\tconst data = await res.json();\r\n\t\t\tconst dataDex = await resDex.json()\r\n\t\t\tres.ok ? toggleIsLoading(false) : toggleIsLoading(true);\r\n\r\n\t\t\tconsole.log(data);\r\n\t\t\tconsole.log(dataDex)\r\n\t\t\t\r\n\t\t\tsetPokeInfo(data);\r\n\t\t\t\r\n\t\t\t\t//sets the array state to hold the types from the pokemon\r\n\t\t\t\t//can't use the pokeInfo state but rather data since it has to occur\r\n\t\t\t\t//after new data fetch\r\n\t\t\t\tsetPokeTypes(data.types.map((i) => i.type.name))\r\n\t\t\t\t//immediately invoked function, previously getDex function\r\n\t\t\tconst getDex = () => {\r\n\t\t\t\t\r\n\t\t\t\tfor (let i = 10; i < dataDex.flavor_text_entries.length; i++) {\r\n\t\t\t\t\tif (dataDex.flavor_text_entries[i].language.name === 'en') {\r\n\t\t\t\t\t\tsetPokeEntry(dataDex.flavor_text_entries[i].flavor_text)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tsetPokeEntry(dataDex.flavor_text_entries[i].flavor_text)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgetDex();\r\n\r\n\r\n\t\t\t//making a load error code here, eventually\r\n\t\t\t//  res.ok ? null : <p>Failed to load new pokemon</p>\r\n\t\t} catch (e) { console.log(e) }\r\n\t}\r\n\r\n\t//when input field is focused, highlight the input field text\r\n\tconst handleFocus = (e) => {\r\n\t\te.target.select()\r\n\t}\r\n\r\n\t//makes the input field do the stuff the button does when you press enter\r\n\tconst handleEnter = (e) => {\r\n\t\tif (e.key === 'Enter' || e.keyCode === 13) {\r\n\t\t\tsearchPoke()\r\n\t\t\thandleFocus(e)\r\n\t\t}\r\n\t}\r\n\t\r\n\t//executes the colour checks whenever pokeTypes state changes\r\n\t//possibly inefficient since it also checks on initial declaration\r\n\tuseEffect(() => {\r\n\t\tfindPokeColors()\r\n\t}, [pokeTypes])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div>\r\n\t\t\t\t<label className={styles.label} htmlFor=\"query\">Pokemon</label>\r\n\r\n\t\t\t\t<input className={styles.input} type=\"text\" name=\"query\" placeholder=\"Enter Name or ID\"\r\n\t\t\t\t\tref={input => input && input.focus()}\r\n\t\t\t\t\tonFocus={handleFocus}\r\n\t\t\t\t\tonKeyPress={(e) => handleEnter(e)}\r\n\t\t\t\t\tonChange={(e) => (e.target.value.toLowerCase()==='meowstic') ? setQuery(678) : (e.target.value.toLowerCase() == 10025) ? setQuery(678):setQuery(e.target.value.toLowerCase()) }\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<button className={styles.button}\r\n\t\t\t\t\tonClick={() => searchPoke()}\r\n\t\t\t\t>Search\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t{(isLoading && !failedToLoad) ?\r\n\t\t\t\t\t(<h1 className={styles.responseMessage}>Loading Pokemon</h1>) : (\r\n\t\t\t\t\t\tfailedToLoad ?\r\n\t\t\t\t\t\t\t(<h1 className={styles.responseMessage}>Failed to load Pokemon</h1>) :\r\n\t\t\t\t\t\t\t(<div>\r\n\t\t\t\t\t\t\t\t<h1 style={{ color: 'Black' }} classname={styles.responseMessage}>Your Pokemon is:</h1>\r\n\t\t\t\t\t\t\t\t<Output\r\n\t\t\t\t\t\t\t\t\tcardColour={stateColours}\r\n\t\t\t\t\t\t\t\t\tpokeInfo={pokeInfo}\r\n\t\t\t\t\t\t\t\t\tpokeEntry={pokeEntry}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\nexport default Content","import Title from './components/Title'\r\nimport Content from './components/Content'\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect} from 'react-router-dom';\r\nimport './styles.css'\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n            \r\n            <div>\r\n                        \r\n                <Router>\r\n                    <div className='container'>\r\n                        <Switch>\r\n                            <Route path='/' exact component={Title}/>\r\n                        </Switch>\r\n                        <Switch>\r\n                            <Route path='/' component={Content}/>\r\n                        </Switch>\r\n                        </div>\r\n                </Router>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokeCard\":\"output_pokeCard__WqL7g\",\"pokeText\":\"output_pokeText__3WWo7\",\"dexEntry\":\"output_dexEntry__11vS-\",\"pokeCardTitle\":\"output_pokeCardTitle__1bKee\",\"pokeSprites\":\"output_pokeSprites__2ILqo\",\"pokeStats\":\"output_pokeStats__20w78\"};"],"sourceRoot":""}